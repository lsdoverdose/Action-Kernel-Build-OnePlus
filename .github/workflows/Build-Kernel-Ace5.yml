name: Standard Kernel Build for Ace 5
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8650'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'kalama'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      BUILD_METHOD:
        description: "编译方式"
        required: true
        default: 'perf'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 24576
          temp-reserve-mb: 8192
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - name: Configure Git
        run: |
          git config --global user.name "Kernel Builder"
          git config --global user.email "builder@kernel.org"

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y python3 git curl bc bison flex libssl-dev kmod cpio

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
          repo sync
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"

      - name: Clean kernel version
        run: |
          cd kernel_workspace/kernel_platform
          sed -i 's/ -dirty//g' common/scripts/setlocalversion
          sed -i 's/ -dirty//g' msm-kernel/scripts/setlocalversion
          sed -i 's/ -dirty//g' external/dtc/scripts/setlocalversion
          git add -A
          git commit -m "Clean kernel version suffix"

      - name: Build kernel
        run: |
          cd kernel_workspace
          export LTO=thin
          ./kernel_platform/build_with_bazel.py \
             -t ${{ github.event.inputs.CPUD }} \
             ${{ github.event.inputs.BUILD_METHOD }}

      - name: Prepare AnyKernel3
        run: |
          git clone https://github.com/osm0sis/AnyKernel3 --depth=1
          rm -rf ./AnyKernel3/.git
          mkdir -p ./AnyKernel3/dtb
          
          # Copy kernel image
          cp kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/dist/Image ./AnyKernel3/
          
          # Copy device tree blobs
          find kernel_workspace/kernel_platform/out/msm-kernel-${{ github.event.inputs.CPUD }}-${{ github.event.inputs.BUILD_METHOD }}/dist/ -name "*.dtb" -exec cp {} ./AnyKernel3/dtb/ \;
          
          # Create basic anykernel.sh
          cat > ./AnyKernel3/anykernel.sh <<EOF
          #!/bin/bash

          ## AnyKernel setup
          kernel.string=Standard Kernel for ${{ github.event.inputs.FEIL }}
          do.devicecheck=1
          do.modules=0
          do.systemless=0
          do.cleanup=1

          ## AnyKernel install
          dump_boot
          patch_cmdline
          write_boot
          EOF
          chmod +x ./AnyKernel3/anykernel.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3_Standard_${{ github.event.inputs.FEIL }}_$(date +%Y%m%d)
          path: |
            ./AnyKernel3/Image
            ./AnyKernel3/dtb/*
            ./AnyKernel3/anykernel.sh
